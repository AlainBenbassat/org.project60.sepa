<?php
/*-------------------------------------------------------+
| Project 60 - SEPA direct debit                         |
| Copyright (C) 2013-2018 TTTP                           |
| Author: X+                                             |
+--------------------------------------------------------+
| This program is released as free software under the    |
| Affero GPL license. You can redistribute it and/or     |
| modify it under the terms of this license which you    |
| can read by viewing the included agpl.txt or online    |
| at www.gnu.org/licenses/agpl.html. Removal of this     |
| copyright header is strictly prohibited without        |
| written permission from the original author(s).        |
+--------------------------------------------------------*/

/**
 * Generated from xml/schema/CRM/Sepa/SEPAContributionGroup.xml
 * DO NOT EDIT.  Generated by GenCode.php
 */
require_once 'CRM/Core/DAO.php';
require_once 'CRM/Utils/Type.php';
class CRM_Sepa_DAO_SEPATransactionGroup extends CRM_Core_DAO
{
  /**
   * static instance to hold the table name
   *
   * @var string
   * @static
   */
  static $_tableName = 'civicrm_sdd_txgroup';
  /**
   * static instance to hold the field values
   *
   * @var array
   * @static
   */
  static $_fields = null;
  /**
   * static instance to hold the keys used in $_fields for each field.
   *
   * @var array
   * @static
   */
  static $_fieldKeys = null;
  /**
   * static instance to hold the FK relationships
   *
   * @var string
   * @static
   */
  static $_links = null;
  /**
   * static instance to hold the values that can
   * be imported
   *
   * @var array
   * @static
   */
  static $_import = null;
  /**
   * static instance to hold the values that can
   * be exported
   *
   * @var array
   * @static
   */
  static $_export = null;
  /**
   * static value to see if we should log any modifications to
   * this table in the civicrm_log table
   *
   * @var boolean
   * @static
   */
  static $_log = true;
  /**
   * ID
   *
   * @var int unsigned
   */
  public $id;
  /**
   * End-to-end reference for this tx group.
   *
   * @var string
   */
  public $reference;
  /**
   * FRST, RCUR or OOFF
   *
   * @var string
   */
  public $type;
  /**
   * Target collection date
   *
   * @var datetime
   */
  public $collection_date;
  /**
   * Latest submission date
   *
   * @var datetime
   */
  public $latest_submission_date;
  /**
   * When was this item created
   *
   * @var datetime
   */
  public $created_date;
  /**
   * fk sepa group Status options in civicrm_option_values
   *
   * @var int unsigned
   */
  public $status_id;
  /**
   * fk to SDD Creditor Id
   *
   * @var int unsigned
   */
  public $sdd_creditor_id;
  /**
   * fk to SDD File Id
   *
   * @var int unsigned
   */
  public $sdd_file_id;
  /**
   * class constructor
   *
   * @access public
   * @return civicrm_sdd_txgroup
   */
  function __construct()
  {
    $this->__table = 'civicrm_sdd_txgroup';
    parent::__construct();
  }
  /**
   * return foreign keys and entity references
   *
   * @static
   * @access public
   * @return array of CRM_Core_EntityReference
   */
  static function getReferenceColumns()
  {
    if (!self::$_links) {
      self::$_links = array(
        new CRM_Core_EntityReference(self::getTableName() , 'sdd_creditor_id', 'civicrm_sdd_creditor', 'id') ,
        new CRM_Core_EntityReference(self::getTableName() , 'sdd_file_id', 'civicrm_sdd_file', 'id') ,
      );
    }
    return self::$_links;
  }
  /**
   * returns all the column names of this table
   *
   * @access public
   * @return array
   */
  static function &fields()
  {
    if (!(self::$_fields)) {
      self::$_fields = array(
        'id' => array(
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'required' => true,
          'export' => true,
          'where' => 'civicrm_sdd_txgroup.id',
          'headerPattern' => '',
          'dataPattern' => '',
        ) ,
        'reference' => array(
          'name' => 'reference',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Reference', array('domain' => 'org.project60.sepa')) ,
          'maxlength' => 64,
          'size' => CRM_Utils_Type::BIG,
        ) ,
        'type' => array(
          'name' => 'type',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Type', array('domain' => 'org.project60.sepa')) ,
          'maxlength' => 4,
          'size' => CRM_Utils_Type::FOUR,
        ) ,
        'collection_date' => array(
          'name' => 'collection_date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => ts('Collection Date', array('domain' => 'org.project60.sepa')) ,
        ) ,
        'latest_submission_date' => array(
          'name' => 'latest_submission_date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => ts('Latest Submission Date', array('domain' => 'org.project60.sepa')) ,
        ) ,
        'created_date' => array(
          'name' => 'created_date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => ts('Created Date', array('domain' => 'org.project60.sepa')) ,
        ) ,
        'status_id' => array(
          'name' => 'status_id',
          'type' => CRM_Utils_Type::T_INT,
          'required' => true,
        ) ,
        'sdd_creditor_id' => array(
          'name' => 'sdd_creditor_id',
          'type' => CRM_Utils_Type::T_INT,
          'FKClassName' => 'CRM_Sepa_DAO_SEPACreditor',
        ) ,
        'sdd_file_id' => array(
          'name' => 'sdd_file_id',
          'type' => CRM_Utils_Type::T_INT,
          'FKClassName' => 'CRM_Sepa_DAO_SEPASddFile',
        ) ,
      );
    }
    return self::$_fields;
  }
  /**
   * Returns an array containing, for each field, the arary key used for that
   * field in self::$_fields.
   *
   * @access public
   * @return array
   */
  static function &fieldKeys()
  {
    if (!(self::$_fieldKeys)) {
      self::$_fieldKeys = array(
        'id' => 'id',
        'reference' => 'reference',
        'type' => 'type',
        'collection_date' => 'collection_date',
        'latest_submission_date' => 'latest_submission_date',
        'created_date' => 'created_date',
        'status_id' => 'status_id',
        'sdd_creditor_id' => 'sdd_creditor_id',
        'sdd_file_id' => 'sdd_file_id',
      );
    }
    return self::$_fieldKeys;
  }
  /**
   * returns the names of this table
   *
   * @access public
   * @static
   * @return string
   */
  static function getTableName()
  {
    return self::$_tableName;
  }
  /**
   * returns if this table needs to be logged
   *
   * @access public
   * @return boolean
   */
  function getLog()
  {
    return self::$_log;
  }
  /**
   * returns the list of fields that can be imported
   *
   * @access public
   * return array
   * @static
   */
  static function &import($prefix = false)
  {
    if (!(self::$_import)) {
      self::$_import = array();
      $fields = self::fields();
      foreach($fields as $name => $field) {
        if (CRM_Utils_Array::value('import', $field)) {
          if ($prefix) {
            self::$_import['sdd_txgroup'] = & $fields[$name];
          } else {
            self::$_import[$name] = & $fields[$name];
          }
        }
      }
    }
    return self::$_import;
  }
  /**
   * returns the list of fields that can be exported
   *
   * @access public
   * return array
   * @static
   */
  static function &export($prefix = false)
  {
    if (!(self::$_export)) {
      self::$_export = array();
      $fields = self::fields();
      foreach($fields as $name => $field) {
        if (CRM_Utils_Array::value('export', $field)) {
          if ($prefix) {
            self::$_export['sdd_txgroup'] = & $fields[$name];
          } else {
            self::$_export[$name] = & $fields[$name];
          }
        }
      }
    }
    return self::$_export;
  }
}
